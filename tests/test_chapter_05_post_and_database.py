#!/usr/bin/env python3
import unittest

from book_tester import (
    ChapterTest,
    CodeListing,
    Command,
    Output,
)


class Chapter5Test(ChapterTest):
    chapter_name = "chapter_05_post_and_database"
    previous_chapter = "chapter_04_philosophy_and_refactoring"

    def test_listings_and_commands_and_output(self):
        self.parse_listings()

        # sanity checks
        self.assertEqual(type(self.listings[0]), Output)
        self.assertEqual(type(self.listings[1]), CodeListing)
        self.assertEqual(type(self.listings[2]), Command)

        views_pos = 17
        self.find_with_check(views_pos, "def home_page")

        nutemplate_pos = 85
        nl = self.find_with_check(nutemplate_pos, '{"items": items}')
        print(nl)

        migrate_pos = 89
        ml = self.find_with_check(migrate_pos, "migrate")
        assert ml.type == "interactive manage.py"

        self.start_with_checkout()
        self.start_dev_server()
        self.unset_PYTHONDONTWRITEBYTECODE()

        restarted_after_views = False
        restarted_after_migrate = False
        restarted_after_nutemplate = False
        while self.pos < len(self.listings):
            print(self.pos)
            if self.pos > views_pos and not restarted_after_views:
                self.restart_dev_server()
                restarted_after_views = True
            if self.pos > migrate_pos and not restarted_after_migrate:
                self.restart_dev_server()
                restarted_after_migrate = True
            if self.pos > nutemplate_pos and not restarted_after_nutemplate:
                self.restart_dev_server()
                restarted_after_nutemplate = True
            self.recognise_listing_and_process_it()

        self.assert_all_listings_checked(self.listings)
        self.check_final_diff(
            ignore=[
                "moves",
                "Generated by Django 5.",
            ]
        )


if __name__ == "__main__":
    unittest.main()
